import { Button, VerticalBox, LineEdit, ScrollView, GroupBox, ComboBox, CheckBox } from "std-widgets.slint";
import {Alert} from "alert.slint";

struct PazienteData {
    inVita: bool,
    cf: string,
    cognome: string,
    nome: string,
    sesso: string,
    dataNascita: string,
    comuneNascita: string,
    indirizzoResidenza: string,
    asp: string,
    MMGCf: string,
    MMGCognome: string,
    MMGNome: string,
    MMGDataScelta: string,
    ssnTipoAssistito: string,
    ssnInizioAssistenza: string,
    ssnFineAssistenza: string,
    ssnMotivazioneFineAssistenza: string,
    ssnNumeroTessera: string,
    dataDecesso: string,
}

component CompactLineEdit inherits LineEdit {
    read_only: true;
    height: 28px;
    font-size: 11px;
}

component FieldLabel inherits Text {
    font-weight: 600;
    font-size: 10px;
    color: #b0b0b0;
    vertical-alignment: center;
}

component DataField inherits VerticalLayout {
    in property <string> label;
    in property <string> value;
    spacing: 2px;

    FieldLabel {
        text: root.label;
    }

    CompactLineEdit {
        text: root.value;
    }
}

export component MainWindow {
    preferred-width: 800px;
    preferred-height: 600px;
    min-width: 700px;
    min-height: 450px;

    // ALERT
    in-out property <string> alert-type: "info";
    in-out property <bool> alert-visibile: false;
    in-out property <string> alert-message: "";
    callback close-alert();

    // WebSocket
    in-out property <bool> ws_server_active: false;
    in-out property <int> ws_connected_clients: 0;
    in-out property <bool> ws_panel_collapsed: false;
    callback invia_dati_ws();
    callback ricerca_anagrafica();
    callback aggiungi_nuovo_assistito();
    callback salva();
    callback scheda_indirizzo();
    callback metodo_pagamento();

    callback cf_input_changed(string);
    in-out property <[string]> combo_options: [];

    in-out property <bool> is_loading: false;
    in-out property <string> cf_input: "";
    in-out property <string> search_type: "cf";
    in-out property <string> nome: "";
    in-out property <string> cognome: "";
    in-out property <string> dataNascita: "";
    in-out property <bool> auto_copy_json: true;
    in-out property <PazienteData> paziente_data: {
        inVita: false,
        cf: "",
        cognome: "",
        nome: "",
        sesso: "",
        dataNascita: "",
        comuneNascita: "",
        indirizzoResidenza: "",
        asp: "",
        MMGCf: "",
        MMGCognome: "",
        MMGNome: "",
        MMGDataScelta: "",
        ssnTipoAssistito: "",
        ssnInizioAssistenza: "",
        ssnFineAssistenza: "",
        ssnMotivazioneFineAssistenza: "",
        ssnNumeroTessera: "",
        dataDecesso: "",
    };
    callback cerca_paziente();
    callback reset_cf_fields();
    callback reset_detail_fields();
    callback on-search-type-changed(string);
    callback copia_json();
    callback copia_cf();

    Rectangle {
        background: #1e1e1e;

        VerticalBox {
            padding: 0px;
            spacing: 0px;

        // Top Bar - Status and Search
        Rectangle {
            background: #2d2d2d;

            VerticalLayout {
                padding: 8px;
                spacing: 8px;

                // WebSocket Status Badge
                HorizontalLayout {
                    spacing: 8px;
                    alignment: space-between;
                    height: 28px;

                    Rectangle {
                        width: 200px;
                        height: 24px;
                        background: root.ws_server_active ? #28a745 : #dc3545;
                        border-radius: 12px;

                        HorizontalLayout {
                            padding: 6px;
                            spacing: 6px;
                            alignment: center;

                            Rectangle {
                                width: 8px;
                                height: 8px;
                                background: white;
                                border-radius: 4px;
                            }

                            Text {
                                text: root.ws_server_active ? "Server Attivo" : "Inattivo";
                                color: white;
                                font-weight: 600;
                                font-size: 11px;
                            }

                            Rectangle {
                                width: 1px;
                                height: 16px;
                                background: white;
                            }

                            Text {
                                text: root.ws_connected_clients + " client";
                                color: white;
                                font-weight: 600;
                                font-size: 11px;
                            }
                        }
                    }

                    // Toggle WebSocket Panel Button
                    Button {
                        text: root.ws_panel_collapsed ? "Mostra Comandi ▼" : "Nascondi Comandi ▲";
                        height: 24px;
                        clicked => {
                            root.ws_panel_collapsed = !root.ws_panel_collapsed;
                        }
                    }
                }

                // Search Section
                HorizontalLayout {
                    spacing: 8px;
                    alignment: start;

                    Text {
                        text: "Tipo:";
                        vertical-alignment: center;
                        font-size: 11px;
                        width: 35px;
                        color: #e0e0e0;
                    }

                    ComboBox {
                        width: 180px;
                        height: 28px;
                        model: root.combo_options;
                        selected => {
                            root.on-search-type-changed(self.current-index);
                        }
                    }

                    CheckBox {
                        text: "Auto-copia JSON";
                        checked <=> root.auto_copy_json;
                        height: 28px;
                    }
                }

                // Search Fields
                HorizontalLayout {
                    spacing: 6px;
                    alignment: start;

                    if root.search_type == "cf": HorizontalLayout {
                        spacing: 6px;

                        LineEdit {
                            placeholder-text: "Codice Fiscale";
                            text <=> root.cf_input;
                            height: 32px;
                            width: 200px;
                            enabled: !root.is_loading;
                            edited(text) => {
                                root.cf_input_changed(text);
                            }
                        }

                        Button {
                            text: root.is_loading ? "Cerco..." : "Cerca";
                            height: 32px;
                            enabled: !root.is_loading;
                            primary: true;
                            clicked => {
                                root.cerca_paziente();
                            }
                        }

                        Button {
                            text: "JSON";
                            height: 32px;
                            enabled: !root.is_loading;
                            clicked => { root.copia_json(); }
                        }

                        Button {
                            text: "CF";
                            height: 32px;
                            enabled: !root.is_loading && root.paziente_data.cf != "";
                            clicked => { root.copia_cf(); }
                        }
                    }

                    if root.search_type == "details": HorizontalLayout {
                        spacing: 6px;

                        LineEdit {
                            placeholder-text: "Nome";
                            text <=> root.nome;
                            height: 32px;
                            width: 130px;
                            enabled: !root.is_loading;
                        }

                        LineEdit {
                            placeholder-text: "Cognome";
                            text <=> root.cognome;
                            height: 32px;
                            width: 130px;
                            enabled: !root.is_loading;
                        }

                        LineEdit {
                            placeholder-text: "Data Nascita";
                            text <=> root.dataNascita;
                            height: 32px;
                            width: 130px;
                            enabled: !root.is_loading;
                        }

                        Button {
                            text: root.is_loading ? "Cerco..." : "Cerca";
                            height: 32px;
                            enabled: !root.is_loading && root.nome != "" && root.cognome != "" && root.dataNascita != "";
                            primary: true;
                            clicked => {
                                root.cerca_paziente();
                            }
                        }

                        Button {
                            text: "JSON";
                            height: 32px;
                            enabled: !root.is_loading;
                            clicked => { root.copia_json(); }
                        }

                        Button {
                            text: "CF";
                            height: 32px;
                            enabled: !root.is_loading && root.paziente_data.cf != "";
                            clicked => { root.copia_cf(); }
                        }
                    }
                }
            }
        }

        // WebSocket Control Panel (Collapsible)
        if !root.ws_panel_collapsed: Rectangle {
            background: #252525;

            HorizontalLayout {
                padding: 8px;
                spacing: 6px;
                alignment: start;

                Text {
                    text: root.ws_connected_clients == 0 ? "⚠ Nessun client" : "✓ " + root.ws_connected_clients + " client";
                    vertical-alignment: center;
                    color: root.ws_connected_clients == 0 ? #dc3545 : #28a745;
                    font-weight: 600;
                    font-size: 11px;
                    width: 100px;
                }

                Button {
                    text: "Invia Dati";
                    height: 28px;
                    enabled: root.ws_server_active && root.ws_connected_clients > 0;
                    clicked => { root.invia_dati_ws(); }
                }

                Button {
                    text: "Ricerca Anagrafica";
                    height: 28px;
                    enabled: root.ws_server_active && root.ws_connected_clients > 0;
                    clicked => { root.ricerca_anagrafica(); }
                }

                Button {
                    text: "Nuovo Assistito";
                    height: 28px;
                    enabled: root.ws_server_active && root.ws_connected_clients > 0;
                    clicked => { root.aggiungi_nuovo_assistito(); }
                }

                Button {
                    text: "Salva";
                    height: 28px;
                    enabled: root.ws_server_active && root.ws_connected_clients > 0;
                    clicked => { root.salva(); }
                }

                Button {
                    text: "Indirizzo";
                    height: 28px;
                    enabled: root.ws_server_active && root.ws_connected_clients > 0;
                    clicked => { root.scheda_indirizzo(); }
                }

                Button {
                    text: "Pagamento";
                    height: 28px;
                    enabled: root.ws_server_active && root.ws_connected_clients > 0;
                    clicked => { root.metodo_pagamento(); }
                }
            }
        }

        // Patient Data Section
        ScrollView {
            VerticalLayout {
                padding: 8px;
                spacing: 8px;

                // Dati Anagrafici
                GroupBox {
                    title: "Dati Anagrafici";

                    GridLayout {
                        padding: 6px;
                        spacing: 6px;

                        DataField {
                            label: "Codice Fiscale";
                            value: root.paziente_data.cf;
                            row: 0;
                            col: 0;
                            colspan: 2;
                        }

                        DataField {
                            label: "Cognome";
                            value: root.paziente_data.cognome;
                            row: 0;
                            col: 2;
                        }

                        DataField {
                            label: "Nome";
                            value: root.paziente_data.nome;
                            row: 0;
                            col: 3;
                        }

                        DataField {
                            label: "Sesso";
                            value: root.paziente_data.sesso;
                            row: 0;
                            col: 4;
                        }

                        DataField {
                            label: "Data Nascita";
                            value: root.paziente_data.dataNascita;
                            row: 1;
                            col: 0;
                        }

                        DataField {
                            label: "Comune Nascita";
                            value: root.paziente_data.comuneNascita;
                            row: 1;
                            col: 1;
                            colspan: 2;
                        }

                        DataField {
                            label: "Indirizzo Residenza";
                            value: root.paziente_data.indirizzoResidenza;
                            row: 1;
                            col: 3;
                            colspan: 2;
                        }
                    }
                }

                // Dati Sanitari
                GroupBox {
                    title: "Dati Sanitari";

                    GridLayout {
                        padding: 6px;
                        spacing: 6px;

                        DataField {
                            label: "ASP";
                            value: root.paziente_data.asp;
                            row: 0;
                            col: 0;
                        }

                        DataField {
                            label: "N° Tessera";
                            value: root.paziente_data.ssnNumeroTessera;
                            row: 0;
                            col: 1;
                        }

                        DataField {
                            label: "Tipo Assistito";
                            value: root.paziente_data.ssnTipoAssistito;
                            row: 0;
                            col: 2;
                        }

                        DataField {
                            label: "In Vita";
                            value: root.paziente_data.inVita ? "SI" : "NO";
                            row: 0;
                            col: 3;
                        }

                        DataField {
                            label: "Data Decesso";
                            value: root.paziente_data.dataDecesso == "" ? (root.cf_input == "" ? "-" : "in vita") : root.paziente_data.dataDecesso;
                            row: 0;
                            col: 4;
                        }

                        DataField {
                            label: "Inizio Assistenza";
                            value: root.paziente_data.ssnInizioAssistenza;
                            row: 1;
                            col: 0;
                        }

                        DataField {
                            label: "Fine Assistenza";
                            value: root.paziente_data.ssnFineAssistenza;
                            row: 1;
                            col: 1;
                        }

                        DataField {
                            label: "Motivazione Fine";
                            value: root.paziente_data.ssnMotivazioneFineAssistenza;
                            row: 1;
                            col: 2;
                            colspan: 3;
                        }
                    }
                }

                // Dati Medico
                GroupBox {
                    title: "Medico di Medicina Generale";

                    GridLayout {
                        padding: 6px;
                        spacing: 6px;

                        DataField {
                            label: "CF Medico";
                            value: root.paziente_data.MMGCf;
                            row: 0;
                            col: 0;
                        }

                        DataField {
                            label: "Cognome";
                            value: root.paziente_data.MMGCognome;
                            row: 0;
                            col: 1;
                        }

                        DataField {
                            label: "Nome";
                            value: root.paziente_data.MMGNome;
                            row: 0;
                            col: 2;
                        }

                        DataField {
                            label: "Data Scelta";
                            value: root.paziente_data.MMGDataScelta;
                            row: 0;
                            col: 3;
                        }
                    }
                }
            }
        }
        }
    }

    Alert {
        visible: root.alert-visibile;
        modalvisibile: root.alert-visibile;
        message: root.alert-message;
        alert-type: root.alert-type;
        close => {
            root.close-alert();
        }
    }
}
